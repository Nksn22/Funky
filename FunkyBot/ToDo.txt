		public override double Cost { get { return 0; } }
		public override double Cooldown { get { return 300; } }
		public override int Range { get { return 35; } }

		public override bool IsDestructiblePower { get { return true; } }
		public override bool IsPrimarySkill { get { return true; } }
		public override bool IsRanged { get { return true; } }
		public override bool IsProjectile { get { return true; } }
		public override bool IsBuff { get { return true; } }
		public override bool IsSpecialAbility { get { return true; } }
		 public override bool IsMovementSkill { get { return true; } }

		private readonly WaitLoops _waitVars = new WaitLoops(2, 2, true);
		public override WaitLoops WaitVars { get { return _waitVars; } }

		public override SkillExecutionFlags ExecutionType { get { return SkillExecutionFlags.Target; } }
		public override SkillPriority Priority { get { return SkillPriority.Medium; } }
		public override SkillUseage UseageType { get { return SkillUseage.Combat; } }




		public override double Cost { get { return 10; } }
		public override double Cooldown { get { return 90000; } }

		public override WaitLoops WaitVars { get { return WaitLoops.Default; } }

		public override SkillExecutionFlags ExecutionType { get { return SkillExecutionFlags.Buff; } }
		public override SkillPriority Priority { get { return SkillPriority.High; } }
		public override SkillUseage UseageType { get { return SkillUseage.Combat; } }